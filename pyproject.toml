# ──────────────────────────────────────────────────────────────────────────────
# pyproject.toml – drives `maturin build`
#   • builds a PyO3 extension module called  `tensor_protocol_pyo3`
#   • does NOT interfere with your manual UniFFI-generated package
# ──────────────────────────────────────────────────────────────────────────────

###############################################################################
# 1. PEP 517/518 - build-system: tells pip how to build the wheel
###############################################################################
[build-system]
requires      = ["maturin>=1.4,<2.0"]   # install maturin when building
build-backend = "maturin"               # maturin is the backend

###############################################################################
# 2. PEP 621 project metadata (what ends up on PyPI)
###############################################################################
[project]
name            = "tensor_iroh"
version         = "0.1.1-alpha.3"
description     = "High-performance PyO3 bindings for tensor_iroh"
readme          = "README.md"
requires-python = ">=3.8"
license         = { text = "MIT" }
keywords        = ["tensor", "p2p", "iroh", "machine-learning"]
classifiers     = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # runtime deps for the PyO3 flavour
    "numpy>=1.21.0",
]

[project.urls]
Homepage   = "https://github.com/Tandemn-Labs/tensor-iroh"
Repository = "https://github.com/Tandemn-Labs/tensor-iroh"

###############################################################################
# 3. Extra knobs understood by maturin
###############################################################################
[tool.maturin]
# Which Cargo features to activate when compiling the wheel.
# - `python` = pyo3 + numpy      (matches features section in Cargo.toml)
# - add  `torch`  here if/when you want the Torch flavour too.
features     = ["python"]
#
# Name of the extension module inside the wheel.
#   >>> import tensor_iroh as tp
#        tp.<functions/objects…>
module-name  = "tensor_iroh"
#
# You can optionally restrict which files go into the wheel:
# include = ["src/**", "LICENSE*", "README.md"]
